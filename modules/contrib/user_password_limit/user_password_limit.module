<?php

/**
 * @file
 * Hook implementations and old style API functions.
 */

use Drupal\Core\Database\Database;
use Drupal\user\Entity\User;
use Drupal\user\UserInterface;

/**
 * Implements hook_cron()
 */
function user_password_limit_cron() {

  	$cron_last = \Drupal::state()->get('system.cron_last');

	if ( date('ymd', $cron_last) != date('ymd', time())) {

	  $connection = Database::getConnection();
	  $connection->truncate('user_password_limit')->execute();

	  \Drupal::logger('user_password_limit')->notice("User password limit cron runs");
	}  
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add the user expire form to an individual user's account page.
 *
 * @see \Drupal\user\ProfileForm::form()
 */
//user password edit form
function user_password_limit_form_user_form_alter(&$form, &$form_state) {

	$userid = \Drupal::currentUser()->id();
	$timestamp = \Drupal::time()->getRequestTime();
	$connection = Database::getConnection();
	$max_limit = \Drupal::config('user_password_limit.settings')->get('max_limit');
	$limit_enable = \Drupal::config('user_password_limit.settings')->get('limit_enable');
	$account_name = $form['account']['name']['#default_value'];

	$userexist = $connection->select('user_password_limit', 'upl')
	            ->fields('upl', array('uid', 'count'))
	            ->condition('uid', $userid)
	            ->execute()->fetchAll();

	if($limit_enable) {

		// if(isset($form['account']['current_pass']['#type'])) {

		if(user_load_by_name($account_name)->id() == $userid) {

			$form['actions']['submit']['#submit'][] = 'update_password_reset_count';

			if($userexist[0]->count >= $max_limit) {

				$form['account']['current_pass']['#description'] = t("You have reached your maximum password resetting limit today");
				$form['#validate'][] = 'reset_count_validate';
			}
		}
	}
}

function reset_count_validate(&$form, &$form_state) {

	$max_limit = \Drupal::config('user_password_limit.settings')->get('max_limit');

	if($form_state->getValue('current_pass') && $form_state->getValue('pass')) {
		$form_state->setErrorByName('pass', t("You can't reset the password more than ".$max_limit." times in a day. You have exceeded your reset limit today. Please try again later."));
		$name = $form_state->getValue('name');
		\Drupal::logger('user_password_limit')->notice($name." tried to change the password once the reset limit has been exceeded");
	}
}

function update_password_reset_count(&$form, &$form_state) {

	$user_reset = $form_state->get('user_pass_reset');
	// $token = \Drupal::request()->query->get('pass-reset-token');

	if(($form_state->getValue('current_pass') && $form_state->getValue('pass')) || ($user_reset && $form_state->getValue('pass'))) {
		$userid = \Drupal::currentUser()->id();
		$timestamp = \Drupal::time()->getRequestTime();
		$connection = Database::getConnection();
		$name = $form_state->getValue('name');

		$userexist = $connection->select('user_password_limit', 'upl')
	        ->fields('upl', array('uid', 'count'))
	        ->condition('uid', $userid)
	        ->execute()->fetchAll();

		if($userexist) {

			$count = $userexist[0]->count;
		    $count++;

			$connection->update('user_password_limit')
				->condition('uid', $userid)
				->fields(['count' => $count, 'timestamp' => $timestamp])
				->execute();

		} else {

			$count = 1;
			$values = [
				$userid,
				$count,
				$timestamp,
			];

			$connection->insert('user_password_limit')
				->fields(['uid', 'count', 'timestamp'], $values)
				->execute();
		}

		\Drupal::logger('user_password_limit')->notice($name." changed the password");
	}
}

//user password reset form
function user_password_limit_form_user_pass_alter(&$form, &$form_state) {
	$form['#validate'][] = 'check_reset_count';
}

function check_reset_count(&$form, &$form_state) {

	if($form_state->hasValue('name')){
		$name = $form_state->getValue('name');
		if(user_load_by_name($name) || user_load_by_mail($name)) {

			if(user_load_by_name($name)) {
				$userid = user_load_by_name($name)->id();
			} else {
				$userid = user_load_by_mail($name)->id();
			}
			
			$connection = Database::getConnection();
			$max_limit = \Drupal::config('user_password_limit.settings')->get('max_limit');

			$userexist = $connection->select('user_password_limit', 'upl')
		        ->fields('upl', array('uid', 'count'))
		        ->condition('uid', $userid)
		        ->execute()->fetchAll();

		    $reset_count = $userexist[0]->count;

		    if($reset_count >= $max_limit) {

		    	$form_state->setErrorByName('name', t("You can't reset the password more than ".$max_limit." times in a day. You have exceeded your reset limit today. Please try again later."));

		    	\Drupal::logger('user_password_limit')->notice($name." tried to change the password once the reset limit has been exceeded");

		    }
		}
	}
}

?>